{"version":3,"sources":["utils/firebase.js","pages/MainPage/index.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","a","getDocs","collection","querySnapshot","console","log","forEach","doc","getUsers","MainPage","className","color","size","type","placeholder","name","id","Array","fill","map","el","src","alt","App","style","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAkBMA,EAAMC,YAVW,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,cACnBC,MAAO,6CAKHC,EAAKC,YAAaT,IAcH,uCAAG,4BAAAU,EAAA,sEAIQC,YAAQC,YAAWJ,EAAI,UAJ/B,OAIdK,EAJc,OAMpBC,QAAQC,IAAIF,GACZA,EAAcG,SAAQ,SAACC,GAEvBH,QAAQC,IAAIE,MATQ,2CAAH,qDAcrBC,G,iCCeeC,EAzDE,WACb,OACI,sBAAKC,UAAU,YAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,cAAf,SACI,cAAC,IAAD,CAAQC,MAAM,OAAOC,KAAK,SAE9B,sBAAKF,UAAU,gBAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,cAAC,IAAD,CAAoBA,UAAU,gBAC9B,sBAAMA,UAAU,cAAhB,0BAEJ,sBAAKA,UAAU,SAAf,UACI,cAAC,IAAD,CAAoBA,UAAU,gBAC9B,sBAAMA,UAAU,cAAhB,0BAEJ,sBAAKA,UAAU,SAAf,UACI,cAAC,IAAD,CAAoBA,UAAU,gBAC9B,sBAAMA,UAAU,cAAhB,0BAEJ,sBAAKA,UAAU,SAAf,UACI,cAAC,IAAD,CAAoBA,UAAU,gBAC9B,sBAAMA,UAAU,cAAhB,gCAIZ,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,aAAf,SACI,uBAAOG,KAAK,SAASC,YAAY,SAASC,KAAK,cAAcC,GAAG,OAEpE,qBAAKN,UAAU,aAAf,SAEQ,IAAIO,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAAAC,GAAE,OACxB,sBAAKV,UAAU,OAAf,UACI,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,WAAf,SACI,qBAAKW,IAAI,GAAGC,IAAI,SAGxB,sBAAKZ,UAAU,QAAf,UACI,qBAAKA,UAAU,YAAf,wBACA,qBAAKA,UAAU,WAAf,SACI,6EAQ5B,qBAAKA,UAAU,iBC5CZa,MARf,WACE,OACE,qBAAKb,UAAU,MAAMc,MAAO,CAACC,OAAQ,SAArC,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4f8198d7.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection, getDocs, addDoc, doc } from 'firebase/firestore/lite';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB2ufzc8RoKnri8Hjwlj5luQ1Q8BImnr8g\",\n  authDomain: \"telegram-2b524.firebaseapp.com\",\n  projectId: \"telegram-2b524\",\n  storageBucket: \"telegram-2b524.appspot.com\",\n  messagingSenderId: \"70205436114\",\n  appId: \"1:70205436114:web:fd89c21345e6982218bd0b\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\nexport const addUser = async(name, age) => {\n    try {\n        addDoc(collection(db, \"users\"), {\n          first: name,\n          born: age\n        });\n        console.log(\"Created\");\n      } catch (e) {\n        console.error(\"Error adding document: \", e);\n      }\n}\n\nexport const getUsers = async () => {\n    // const users = await getDocs(collection(db, \"users\"));\n    // console.log(users)\n    // const docRef = doc(db, \"users\", 0)\n    const querySnapshot = await getDocs(collection(db, \"users\"));\n    // const querySnapshot = await getDocs(docRef);\n    console.log(querySnapshot)\n    querySnapshot.forEach((doc) => {\n    // console.log(`${doc.id} => ${doc.data()}`);\n    console.log(doc)\n    });\n\n}\n\ngetUsers();\n\n// addUser(\"Davron Normuminov\", 19);\n\n\n\n// console.log(usersData)","import React from 'react';\nimport \"./mainpage.scss\";\nimport { BiMenu } from 'react-icons/bi';\nimport { IoChatbubblesSharp } from 'react-icons/io5'\n\nconst MainPage = () => {\n    return (\n        <div className=\"main_page\">\n            <div className=\"folders\">\n                <div className=\"burger_menu\">\n                    <BiMenu color=\"#ddd\" size=\"32\" />\n                </div>\n                <div className=\"folders_group\">\n                    <div className=\"folder active\">\n                        <IoChatbubblesSharp className=\"folder_icon\" />\n                        <span className=\"folder_name\">All Chats</span>\n                    </div>\n                    <div className=\"folder\">\n                        <IoChatbubblesSharp className=\"folder_icon\" />\n                        <span className=\"folder_name\">All Chats</span>\n                    </div>\n                    <div className=\"folder\">\n                        <IoChatbubblesSharp className=\"folder_icon\" />\n                        <span className=\"folder_name\">All Chats</span>\n                    </div>\n                    <div className=\"folder\">\n                        <IoChatbubblesSharp className=\"folder_icon\" />\n                        <span className=\"folder_name\">All Chats</span>\n                    </div>\n                </div>\n            </div>\n            <div className=\"chats\">\n                <div className=\"search_bar\">\n                    <input type=\"search\" placeholder=\"Search\" name=\"search_chat\" id=\"\" />\n                </div>\n                <div className=\"chats_list\">\n                    {\n                        new Array(20).fill(0).map(el => (\n                            <div className=\"chat\">\n                                <div className=\"left\">\n                                    <div className=\"chat_img\">\n                                        <img src=\"\" alt=\"\" />\n                                    </div>\n                                </div>\n                                <div className=\"right\">\n                                    <div className=\"chat_name\">TeraWeb.uz</div>\n                                    <div className=\"last_msg\">\n                                        <span>https://devhints.io/react</span>\n                                    </div>\n                                </div>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n            <div className=\"messages\">\n\n            </div>\n        </div>\n    )\n}\n\nexport default MainPage;","import './utils/firebase';\nimport MainPage from './pages/MainPage'\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{height: \"100vh\"}}>\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './assets/styles/main.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}